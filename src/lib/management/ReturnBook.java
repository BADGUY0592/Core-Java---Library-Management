/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lib.management;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.*;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import static lib.management.MyVariables.PASSWORD;
import static lib.management.MyVariables.PATH;
import static lib.management.MyVariables.PLACE;
import static lib.management.MyVariables.USERNAME;
public class ReturnBook extends javax.swing.JInternalFrame {

    /**
     * Creates new form ReturnBook
     */
    public ReturnBook() {
        initComponents();
            myone();
    }

    public void myone()
    {
         try
     {
        Connection myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
        try
        {
            DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
            String myquery2="select * from bookissue";
            PreparedStatement mystatement2=myconnection.prepareStatement(myquery2);
            ResultSet r2=mystatement2.executeQuery();
            if(r2.next())
            {
                do
                {
                    mymodel.addRow(new String[]{r2.getString("issueid"),r2.getString("name"),r2.getString("bookname"),r2.getString("issuedate"),r2.getString("returndate")});
                }while(r2.next());
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "Some Problem Occured");
            }
        }
        catch(Exception et)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in querry due to "+et.getMessage());
        }
        finally
        {
            myconnection.close();
        }
     }
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane, "Error in connection due to "+e.getMessage());
     }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        t3 = new javax.swing.JFormattedTextField();
        t6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        t7 = new javax.swing.JLabel();
        t1 = new javax.swing.JLabel();
        t2 = new javax.swing.JLabel();
        t5 = new javax.swing.JLabel();

        setBorder(null);
        setClosable(true);
        setMaximizable(true);
        setTitle("Return Book");

        jLabel1.setText("Book Name");

        jLabel2.setText("Member Name");

        jLabel3.setText("Member Id");

        jLabel5.setText("Serial Id");

        t3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        t3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t3ActionPerformed(evt);
            }
        });

        t6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jButton1.setText("RETURN BOOK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jLabel7.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 51, 51));
        jLabel7.setText("*  If the Book Is Torned Then Double the Cost of Book Will beTaken from The Member.");

        jLabel6.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 51, 51));
        jLabel6.setText("*  Please Return Books in 14 Days Or else 5Rs/- Per Day Fine Will Be Taken.");

        jLabel8.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setText("*  Any Member Can Issue 2 Books Only At a Time.");

        jLabel9.setFont(new java.awt.Font("Nirmala UI", 1, 36)); // NOI18N
        jLabel9.setText("Rules Of The Library");
        jLabel9.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel9)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(32, 32, 32))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Issue Id", "Member Name", "Book Name", "Issue Date", "Return Date"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel10.setText("Issue Id");

        t7.setText("-----------");

        t1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        t1.setText("Select From Table");

        t2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        t2.setText("Select From Table");

        t5.setText("--------------------------");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel10)
                            .addComponent(jLabel5))
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(t3)
                                .addComponent(t7, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(t1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(t2, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                            .addComponent(t5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addComponent(t6, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 261, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t7)
                            .addComponent(jLabel10))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(t6, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(t5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try
        {
        Connection myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
             try
            {
                    String m1="select * from bookissue where issueid=?";
                    PreparedStatement mystatement1=myconnection.prepareStatement(m1);
                    mystatement1.setString(1, t7.getText());
                    ResultSet r1=mystatement1.executeQuery();
                    if(r1.next())
                    {
                        String m2="insert into bookreturn(name,age,class,rollno,serialid,gender,address,bookname,memberid,issuedate,returndate1,returndate2) values(?,?,?,?,?,?,?,?,?,?,?,?)";
                        String m3="update member set booklimit=booklimit+? where memberid=?";
                        PreparedStatement mystatement3=myconnection.prepareStatement(m3);
                        mystatement3.setString(1, "1");
                        mystatement3.setString(2, t3.getText());
                        String m4="update book set quantity=quantity+? where serial=?";
                        PreparedStatement mystatement4=myconnection.prepareStatement(m4);
                        mystatement4.setString(1, "1");
                        mystatement4.setString(2, t5.getText());
                        if(mystatement3.executeUpdate()>0 && mystatement4.executeUpdate()>0)
                        {   
                            PreparedStatement mystatement2=myconnection.prepareStatement(m2);
                            mystatement2.setString(1, t2.getText());
                            mystatement2.setString(2, r1.getString("age"));
                            mystatement2.setString(3, r1.getString("class"));
                            mystatement2.setString(4, r1.getString("rollno"));
                            mystatement2.setString(5, t5.getText());
                            mystatement2.setString(6, r1.getString("gender"));
                            mystatement2.setString(7, r1.getString("address"));
                            mystatement2.setString(8, t1.getText());
                            mystatement2.setString(9, t3.getText());
                            SimpleDateFormat a1=new SimpleDateFormat("yyyy-MM-dd");
                            mystatement2.setDate(10, r1.getDate("issuedate"));
                            mystatement2.setDate(11, r1.getDate("returndate"));
                            Date date = new Date();
                            Date ft=r1.getDate("returndate");
                            mystatement2.setString(12, a1.format(date));
                            int days = (int)(Math.round(date.getTime() - r1.getDate("returndate").getTime())/(1000*60*60*24)); 
                            if(days>0)
                            {
                                int f=5*days;
                                JOptionPane.showMessageDialog(rootPane, "You have Submitted the Book "+String.valueOf(days)+" Days Late. Pay Fine of Rs."+f+" to Proceed.");
                            }
                            if(mystatement2.executeUpdate()>0 )
                            {
                                String m5="delete from bookissue where issueid=?";
                                PreparedStatement mystatement5=myconnection.prepareStatement(m5);
                                mystatement5.setString(1, t7.getText());
                                if(mystatement5.executeUpdate()>0)
                                {
                                    JOptionPane.showMessageDialog(rootPane, "Book Returned");
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(rootPane, "Some Problem Deleting Issued Books");
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(rootPane, "Some Problem Occured in Returning Book");
                            }
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "User Has Entered Wrong Member Id");
                    }
            }
            catch(Exception et)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to "+et.getMessage());
            }
            finally
            {
                        myconnection.close();
            }
     }
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane, "Error in connection due to "+e.getMessage());
     }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        
    }//GEN-LAST:event_jTable1KeyReleased

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        try
         {
            Connection myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
            try
            {
                 int row = jTable1.getSelectedRow();
                int column = 0;
                String pid=jTable1.getValueAt(row, column).toString();
                DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
                String myquery="select * from bookissue where issueid =?";
                PreparedStatement mystatement=myconnection.prepareStatement(myquery);
                mystatement.setString(1, pid);
                ResultSet r1=mystatement.executeQuery();
                if(r1.next())
                {
                    t1.setText(r1.getString("bookname"));
                    t2.setText(r1.getString("name"));
                    t7.setText(pid);
                    mymodel.removeRow(jTable1.getSelectedRow());
                    String m1="select memberpic from member where name=?";
                    PreparedStatement mystatement1=myconnection.prepareStatement(m1);
                    mystatement1.setString(1, t2.getText());
                    ResultSet r2=mystatement1.executeQuery();
                    if(r2.next())
                    {
                        String ofile="memberimages//"+r2.getString("memberpic");
                        Image simg = ImageIO.read( new File(ofile)).getScaledInstance( t6.getWidth(), t6.getHeight(), Image.SCALE_DEFAULT);
                         t6.setIcon(new ImageIcon(simg));
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "Incorrect Member Details");
                    }
                    String m3="select serial from book where name=?";
                    PreparedStatement mystatement3=myconnection.prepareStatement(m1);
                    mystatement3.setString(1, r1.getString("name"));
                    ResultSet r3=mystatement3.executeQuery();
                    if(r3.next())
                    {
                        t5.setText(r3.getString("serial"));
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "Incorrect Member Details");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "No Data Found");
                }
            }
            catch(Exception et)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to "+et.getMessage());
            }
            finally
            {
                myconnection.close();
            }
         }
         catch(Exception e)
         {
             JOptionPane.showMessageDialog(rootPane, "Error in connection due to "+e.getMessage());
         }
    }//GEN-LAST:event_jTable1MouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel t1;
    private javax.swing.JLabel t2;
    private javax.swing.JFormattedTextField t3;
    private javax.swing.JLabel t5;
    private javax.swing.JLabel t6;
    private javax.swing.JLabel t7;
    // End of variables declaration//GEN-END:variables
}
