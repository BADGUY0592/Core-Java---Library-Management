
package lib.management;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.*;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.*;
import static lib.management.MyVariables.PASSWORD;
import static lib.management.MyVariables.PATH;
import static lib.management.MyVariables.PLACE;
import static lib.management.MyVariables.USERNAME;
/**
 *
 * @author THE BAD GUY
 */
public class IssueBook extends javax.swing.JInternalFrame {

    /**
     * Creates new form IssueBook
     */
    public IssueBook() {
        initComponents();
    try
     {
        Connection myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
        try
        {
            String m1="select name from book where quantity>?";
            String m2="select name from member";
            PreparedStatement mystatement1=myconnection.prepareStatement(m1);
            mystatement1.setString(1, "0");
            ResultSet r1=mystatement1.executeQuery();
            PreparedStatement mystatement2=myconnection.prepareStatement(m2);
            ResultSet r2=mystatement2.executeQuery();
            if(r1.next())
            {
                do{
                    t1.addItem(r1.getString("name"));
                }while(r1.next());
            }
            else
            {
                t1.addItem("No Book Added");
            }
            if(r2.next())
            {
                do{
                    t2.addItem(r2.getString("name"));
                }while(r2.next());
            }
            else
            {
                t2.addItem("No Member Added");
            }
        }
        catch(Exception et)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in querry due to "+et.getMessage());
        }
        finally
        {
            myconnection.close();
        }
     }
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane, "Error in connection due to "+e.getMessage());
     }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        t1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        t2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        t3 = new javax.swing.JFormattedTextField();
        t4 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        t6 = new javax.swing.JLabel();
        t5 = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setTitle("Book Issue");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setText("Book Name");

        t1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Ur Book" }));
        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Member Name");

        t2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Ur Name" }));
        t2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Member Id");

        t3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        t3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t3ActionPerformed(evt);
            }
        });

        jLabel4.setText("Select Issuing Date");

        jLabel5.setText("Serial Id");

        jButton1.setText("ISSUE BOOK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jLabel7.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 51, 51));
        jLabel7.setText("*  If the Book Is Torned Then Double the Cost of Book Will beTaken from The Member.");

        jLabel6.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 51, 51));
        jLabel6.setText("*  Please Return Books in 14 Days Or else 5Rs/- Per Day Fine Will Be Taken.");

        jLabel8.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setText("*  Any Member Can Issue 2 Books Only At a Time.");

        jLabel9.setFont(new java.awt.Font("Nirmala UI", 1, 36)); // NOI18N
        jLabel9.setText("Rules Of The Library");
        jLabel9.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel9)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(32, 32, 32))
        );

        t6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        t5.setText("-------------------------");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(t4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t2, 0, 220, Short.MAX_VALUE)
                            .addComponent(t3)
                            .addComponent(t5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addComponent(t6, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(t6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(t5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t3ActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
     
    }//GEN-LAST:event_formMouseClicked

    public void myone()
    {
         
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      try
        {
        Connection myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
             try
            {
                    String m1="select * from member where memberid=?";
                    PreparedStatement mystatement1=myconnection.prepareStatement(m1);
                    mystatement1.setString(1, t3.getText());
                    ResultSet r1=mystatement1.executeQuery();
                    if(r1.next())
                    {
                        String m5="select count(*) from bookissue where memberid=?";
                        PreparedStatement mystatement5=myconnection.prepareStatement(m5);
                        mystatement5.setString(1, t3.getText());
                        ResultSet r5=mystatement5.executeQuery();
                        if(r5.next())
                        {
                            int t =r5.getInt(1);
                            if(t<2  || t==0)
                            {
                                String m2="insert into bookissue(name,age,class,rollno,serialid,gender,address,bookname,memberid,issuedate,returndate) values(?,?,?,?,?,?,?,?,?,?,?)";
                                String m3="update member set booklimit=booklimit-? where memberid=?";
                                PreparedStatement mystatement3=myconnection.prepareStatement(m3);
                                mystatement3.setString(1, "1");
                                mystatement3.setString(2, t3.getText());
                                String m4="update book set quantity=quantity-? where serial=?";
                                PreparedStatement mystatement4=myconnection.prepareStatement(m4);
                                mystatement4.setString(1, "1");
                                mystatement4.setString(2, t5.getText());
                                if(mystatement3.executeUpdate()>0 && mystatement4.executeUpdate()>0)
                                {
                                    PreparedStatement mystatement2=myconnection.prepareStatement(m2);
                                    mystatement2.setString(1, t2.getSelectedItem().toString());
                                    mystatement2.setString(2, r1.getString("age"));
                                    mystatement2.setString(3, r1.getString("class"));
                                    mystatement2.setString(4, r1.getString("rollno"));
                                    mystatement2.setString(5, t5.getText());
                                    mystatement2.setString(6, r1.getString("gender"));
                                    mystatement2.setString(7, r1.getString("address"));
                                    mystatement2.setString(8, t1.getSelectedItem().toString());
                                    mystatement2.setString(9, t3.getText());
                                    SimpleDateFormat a1=new SimpleDateFormat("yyyy-MM-dd");
                                    mystatement2.setString(10, a1.format(t4.getDate()));
                                    Calendar c = Calendar.getInstance();
                                    c.setTime(t4.getDate());
                                    c.add(Calendar.DAY_OF_MONTH, 14);
                                    Date c1= c.getTime();
                                    mystatement2.setString(11, a1.format(c1));
                                    if(mystatement2.executeUpdate()>0)
                                    {
                                        JOptionPane.showMessageDialog(rootPane, "Book Issued");
                                    }
                                    else
                                    {
                                        JOptionPane.showMessageDialog(rootPane, "Some Problem Occured in Issuing Books");
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(rootPane, "Some Problem Occured in Books Quantity");
                                }  
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(rootPane, "User Has Reached Limit For the Issue Of Books");
                            }
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "User Has Entered Wrong Member Id");
                    }
            }
            catch(Exception et)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to "+et.getMessage());
            }
            finally
            {
                myconnection.close();
            }
     }
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane, "Error in connection due to "+e.getMessage());
     }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void t2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t2ActionPerformed
    try
     {
        Connection myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
        try
        {
            String m1="select memberpic from member where name=?";
            PreparedStatement mystatement1=myconnection.prepareStatement(m1);
            mystatement1.setString(1, t2.getSelectedItem().toString());
            ResultSet r1=mystatement1.executeQuery();
            if(r1.next())
            {
                String ofile="memberimages//"+r1.getString("memberpic");
                Image simg = ImageIO.read( new File(ofile)).getScaledInstance( t6.getWidth(), t6.getHeight(), Image.SCALE_DEFAULT);
                 t6.setIcon(new ImageIcon(simg));
                 if(t2.getSelectedIndex()==0)
                 {
                     t6.setIcon(null);
                 }
            }
            else
            {
                if(t2.getSelectedIndex()==0)
                 {
                     t6.setIcon(null);
                 }
                JOptionPane.showMessageDialog(rootPane, "Incorrect Member Details");
            }
        }
        catch(Exception et)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in querry due to "+et.getMessage());
        }
        finally
        {
            myconnection.close();
        }
     }
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane, "Error in connection due to "+e.getMessage());
     }
    }//GEN-LAST:event_t2ActionPerformed

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        try
     {
        Connection myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
        try
        {
            String m1="select serial from book where name=?";
            PreparedStatement mystatement1=myconnection.prepareStatement(m1);
            mystatement1.setString(1, t1.getSelectedItem().toString());
            ResultSet r1=mystatement1.executeQuery();
            if(r1.next())
            {
                t5.setText(r1.getString("serial"));
            }
            else
            {
                if(t1.getSelectedIndex()==0)
                 {
                     t5.setText("---------------------");
                 }
                JOptionPane.showMessageDialog(rootPane, "Incorrect Book Name");
            }
        }
        catch(Exception et)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in querry due to "+et.getMessage());
        }
        finally
        {
            myconnection.close();
        }
     }
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(rootPane, "Error in connection due to "+e.getMessage());
     }
    }//GEN-LAST:event_t1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> t1;
    private javax.swing.JComboBox<String> t2;
    private javax.swing.JFormattedTextField t3;
    private com.toedter.calendar.JDateChooser t4;
    private javax.swing.JLabel t5;
    private javax.swing.JLabel t6;
    // End of variables declaration//GEN-END:variables
}
